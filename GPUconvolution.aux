\relax 
\providecommand\hyper@newdestlabel[2]{}
\@writefile{toc}{\contentsline {chapter}{\numberline {5}GPU Convolution}{27}{chapter.5}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{chap:gpu_convolution}{{5}{27}{GPU Convolution}{chapter.5}{}}
\newlabel{eq:simple_conv_time}{{5.1}{27}{GPU Convolution}{equation.5.0.1}{}}
\newlabel{eq:simple_conv_freq}{{5.2}{27}{GPU Convolution}{equation.5.0.2}{}}
\citation{FFTW:2017,cooley1965algorithm}
\newlabel{eq:flops_time_domain_conv}{{5.4}{28}{GPU Convolution}{equation.5.0.4}{}}
\@writefile{brf}{\backcite{FFTW:2017,cooley1965algorithm}{{28}{5}{equation.5.0.4}}}
\newlabel{eq:flops_freq_domain_conv}{{5.5}{28}{GPU Convolution}{equation.5.0.5}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.1}{\ignorespaces Comparison of number of floating point operations (flops) required to convolve a $12672$ sample complex signal with a varied length tap complex filter.}}{29}{figure.5.1}}
\newlabel{fig:Theory12672signal_flops}{{5.1}{29}{GPU Convolution}{figure.5.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {5.1}CPU and GPU Single Batch Convolution}{29}{section.5.1}}
\newlabel{sec:cuda_convolution_single}{{5.1}{29}{CPU and GPU Single Batch Convolution}{section.5.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.2}{\ignorespaces Comparison of number of floating point operations (flops) required to convolve a varied length complex signal with a $186$ tap complex filter.}}{30}{figure.5.2}}
\newlabel{fig:Theory186Tap_flops}{{5.2}{30}{GPU Convolution}{figure.5.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.3}{\ignorespaces Comparison of number of floating point operations (flops) required to convolve a varied length complex signal with a $21$ tap complex filter.}}{31}{figure.5.3}}
\newlabel{fig:Theory21Tap_flops}{{5.3}{31}{GPU Convolution}{figure.5.3}{}}
\@writefile{lot}{\contentsline {table}{\numberline {5.1}{\ignorespaces Defining start and stop lines for timing comparison in Listing \ref  {code:convFun}.}}{32}{table.5.1}}
\newlabel{tab:CPUvsGPUtimingTable}{{5.1}{32}{CPU and GPU Single Batch Convolution}{table.5.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.4}{\ignorespaces Comparison of a complex convolution on CPU verse GPU. The signal length is varied and the filter is fixed at $186$ taps. The comparison is messy with out lower bounding.}}{33}{figure.5.4}}
\newlabel{fig:CPUvsGPU_1batch_186taps_varySignal_noMin}{{5.4}{33}{CPU and GPU Single Batch Convolution}{figure.5.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.5}{\ignorespaces Comparison of a complex convolution on CPU verse GPU. The signal length is varied and the filter is fixed at $186$ taps. A lower bound was applied by searching for a local minimums in $15$ sample width windows.}}{34}{figure.5.5}}
\newlabel{fig:CPUvsGPU_1batch_186taps_varySignal}{{5.5}{34}{CPU and GPU Single Batch Convolution}{figure.5.5}{}}
\@writefile{lot}{\contentsline {table}{\numberline {5.2}{\ignorespaces Convolution computation times with signal length $12672$ and filter length $186$ on a Tesla K40c GPU.}}{34}{table.5.2}}
\newlabel{tab:CPUvsGPUtable_12672_186}{{5.2}{34}{CPU and GPU Single Batch Convolution}{table.5.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.6}{\ignorespaces Comparison of a complex convolution on CPU verse GPU. The signal length is varied and the filter is fixed at $21$ taps. A lower bound was applied by searching for a local minimums in $5$ sample width windows.}}{35}{figure.5.6}}
\newlabel{fig:CPUvsGPU_1batch_21taps_varySignal}{{5.6}{35}{CPU and GPU Single Batch Convolution}{figure.5.6}{}}
\@writefile{lot}{\contentsline {table}{\numberline {5.3}{\ignorespaces Convolution computation times with signal length $12672$ and filter length $21$ on a Tesla K40c GPU.}}{35}{table.5.3}}
\newlabel{tab:CPUvsGPUtable_12672_21}{{5.3}{35}{CPU and GPU Single Batch Convolution}{table.5.3}{}}
\citation{haidar2015optimization}
\@writefile{lof}{\contentsline {figure}{\numberline {5.7}{\ignorespaces Comparison of a complex convolution on CPU verse GPU. The filter length is varied and the signal is fixed at $12672$ samples. A lower bound was applied by searching for a local minimums in $3$ sample width windows.}}{36}{figure.5.7}}
\newlabel{fig:CPUvsGPU_1batch_12672signal_varyFilter}{{5.7}{36}{CPU and GPU Single Batch Convolution}{figure.5.7}{}}
\@writefile{toc}{\contentsline {section}{\numberline {5.2}Batched Convolution}{36}{section.5.2}}
\@writefile{brf}{\backcite{haidar2015optimization}{{36}{5.2}{section.5.2}}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.8}{\ignorespaces Comparison on execution time per batch for complex convolution. The number of batches is varied while the signal and filter length is set to $12672$ and $186$.}}{37}{figure.5.8}}
\newlabel{fig:CPUvsGPU_varyBatches_186taps_12672signal_timePerBatch}{{5.8}{37}{Batched Convolution}{figure.5.8}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.9}{\ignorespaces Comparison of a batched complex convolution on a CPU and GPU. The number of batches is varied while the signal and filter length is set to $12672$ and $186$.}}{38}{figure.5.9}}
\newlabel{fig:CPUvsGPU_varyBatches_186taps_12672signal}{{5.9}{38}{Batched Convolution}{figure.5.9}{}}
\@writefile{lot}{\contentsline {table}{\numberline {5.4}{\ignorespaces Defining start and stop lines for timing comparison in Listing \ref  {code:batchedConvFun}.}}{39}{table.5.4}}
\newlabel{tab:BatchedGPUtimingTable}{{5.4}{39}{Batched Convolution}{table.5.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.10}{\ignorespaces Comparison of a batched complex convolution on a GPU. The signal length is varied and the filter is fixed at $186$ taps.}}{39}{figure.5.10}}
\newlabel{fig:CPUvsGPU_3104batch_186taps_varySignal}{{5.10}{39}{Batched Convolution}{figure.5.10}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.11}{\ignorespaces Comparison of a batched complex convolution on a GPU. The signal length is varied and the filter is fixed at $21$ taps.}}{40}{figure.5.11}}
\newlabel{fig:CPUvsGPU_3104batch_21taps_varySignal}{{5.11}{40}{Batched Convolution}{figure.5.11}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.12}{\ignorespaces Comparison of a batched complex convolution on a GPU. The filter length is varied and the signal length is set at $12672$ samples.}}{41}{figure.5.12}}
\newlabel{fig:CPUvsGPU_3104batch_12672signal_varyFilter}{{5.12}{41}{Batched Convolution}{figure.5.12}{}}
\@writefile{lot}{\contentsline {table}{\numberline {5.5}{\ignorespaces Batched convolution execution times with for a $12672$ sample signal and $186$ tap filter on a Tesla K40c GPU.}}{42}{table.5.5}}
\newlabel{tab:Batched_CPUvsGPUtable_12672_186}{{5.5}{42}{Batched Convolution}{table.5.5}{}}
\@writefile{lot}{\contentsline {table}{\numberline {5.6}{\ignorespaces Batched convolution execution times with for a $12672$ sample signal and $21$ tap filter on a Tesla K40c GPU.}}{42}{table.5.6}}
\newlabel{tab:Batched_CPUvsGPUtable_12672_21}{{5.6}{42}{Batched Convolution}{table.5.6}{}}
\@writefile{lot}{\contentsline {table}{\numberline {5.7}{\ignorespaces Batched convolution execution times with for a $12672$ sample signal and cascaded $21$ and $186$ tap filter on a Tesla K40c GPU.}}{42}{table.5.7}}
\newlabel{tab:Batched_CPUvsGPUtable_12672_21_186}{{5.7}{42}{Batched Convolution}{table.5.7}{}}
\@writefile{lot}{\contentsline {table}{\numberline {5.8}{\ignorespaces Batched convolution execution times with for a $12672$ sample signal and $206$ tap filter on a Tesla K40c GPU.}}{43}{table.5.8}}
\newlabel{tab:Batched_CPUvsGPUtable_12672_206}{{5.8}{43}{Batched Convolution}{table.5.8}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.13}{\ignorespaces Two ways to convolve the signal $\mathbf  {r}$ with the $186$ tap filter $\mathbf  {c}$ and $21$ tap filter $\mathbf  {d}$.}}{43}{figure.5.13}}
\newlabel{fig:twoWaysToConv}{{5.13}{43}{Batched Convolution}{figure.5.13}{}}
\newlabel{code:convFun}{{5.1}{44}{CUDA code to performing complex convolution five different ways: time domain CPU, frequency domain CPU time domain GPU, time domain GPU using shared memory and frequency domain GPU}{lstlisting.5.1}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {5.1}CUDA code to performing complex convolution five different ways: time domain CPU, frequency domain CPU time domain GPU, time domain GPU using shared memory and frequency domain GPU.}{44}{lstlisting.5.1}}
\newlabel{code:batchedConvFun}{{5.2}{50}{CUDA code to perform batched complex convolution three different ways in a GPU: time domain using global memory, time domain using shared memory and frequency domain GPU}{lstlisting.5.2}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {5.2}CUDA code to perform batched complex convolution three different ways in a GPU: time domain using global memory, time domain using shared memory and frequency domain GPU.}{50}{lstlisting.5.2}}
\@setckpt{GPUconvolution}{
\setcounter{page}{55}
\setcounter{equation}{5}
\setcounter{enumi}{0}
\setcounter{enumii}{0}
\setcounter{enumiii}{0}
\setcounter{enumiv}{0}
\setcounter{footnote}{0}
\setcounter{mpfootnote}{0}
\setcounter{part}{0}
\setcounter{chapter}{5}
\setcounter{section}{2}
\setcounter{subsection}{0}
\setcounter{subsubsection}{0}
\setcounter{paragraph}{0}
\setcounter{subparagraph}{0}
\setcounter{figure}{13}
\setcounter{table}{8}
\setcounter{parentequation}{0}
\setcounter{r@tfl@t}{0}
\setcounter{cp@cnt}{0}
\setcounter{cp@tempcnt}{0}
\setcounter{lstnumber}{270}
\setcounter{subfigure}{0}
\setcounter{lofdepth}{1}
\setcounter{subtable}{0}
\setcounter{lotdepth}{1}
\setcounter{Item}{0}
\setcounter{Hfootnote}{0}
\setcounter{bookmark@seq@number}{25}
\setcounter{lstlisting}{2}
\setcounter{section@level}{1}
}
